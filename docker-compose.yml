name: "theshopi-containers"
services:
  # requirement technical
  redis:
    container_name: redis_container
    image: arm64v8/redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - redis-data:/data
  mongodb:
    container_name: mongodb_container
    image: arm64v8/mongo:7-jammy
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=theshopi_users
    volumes:
      - mongodb-data:/data/db
  mysql:
    container_name: mysql_container
    image: arm64v8/mysql:oracle
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=Asdfgh123
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=Asdfgh123
      - MYSQL_DATABASE=theshopi_auth
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  rabbitmq:
    container_name: rabbitmq_container
    image: arm64v8/rabbitmq:3-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Asdfgh123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  elasticsearch:
    container_name: elasticsearch_container
    image: arm64v8/elasticsearch:8.17.3
    restart: always
    ports:
      - "9200:9200"
    environment:
      - ELASTIC_PASSWORD=Asdfgh123
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.authc.api_key.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enrollment.enabled=true
      - xpack.security.authc.token.enabled=true
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.flood_stage=1gb
      - cluster.routing.allocation.disk.watermark.low=3gb
      - cluster.routing.allocation.disk.watermark.high=2gb
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: arm64v8/kibana:8.17.3
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic
    depends_on:
      - elasticsearch

  # built services
  notifications:
    container_name: notification_container
    build:
      context: ./servers/notification-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4001:4001
    env_file: ./servers/notification-service/.env
    environment:
      - CLIENT_URL=http://localhost:3000
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - SENDER_EMAIL=95f39b48edfe1b
      - SENDER_PASSWORD=cbbf7b0b94fd7e
    depends_on:
      - elasticsearch

networks:
  elastic:
    name: elastic
volumes:
  mysql-data:
  redis-data:
  mongodb-data:
  rabbitmq-data:
  elasticsearch-data:
