version: "3.9"
name: "theshopi-containers"
services:
  # requirement technical
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - redis-data:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:7-jammy
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
  mysql_auth:
    container_name: mysql_auth_container
    image: mysql:oracle
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=Asdfgh123
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=Asdfgh123
      - MYSQL_DATABASE=theshopi_auth
    ports:
      - "3306:3306"
    volumes:
      - mysql-data-auth:/var/lib/mysql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Asdfgh123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  elasticsearch:
    container_name: elasticsearch_container
    image: elasticsearch:8.17.3
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - ELASTIC_PASSWORD=Asdfgh123
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enrollment.enabled=true
      - xpack.security.authc.token.enabled=true
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.flood_stage=1gb
      - cluster.routing.allocation.disk.watermark.low=3gb
      - cluster.routing.allocation.disk.watermark.high=2gb
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  # kibana:
  #   container_name: kibana_container
  #   image: kibana:8.17.3
  #   restart: unless-stopped
  #   environment:
  #     - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
  #   ports:
  #     - "5601:5601"
  #   volumes:
  #     - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
  #   networks:
  #     - elastic
  #   depends_on:
  #     - elasticsearch

  # apm-server:
  #   image: elastic/apm-server:8.17.3
  #   container_name: apm_server_container
  #   ports:
  #     - 8200:8200
  #   volumes:
  #     - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
  #   networks:
  #     - elastic
  #   command: >
  #     apm-server -e
  #       -E apm-server.rum.enabled=true
  #       -E setup.kibana.host=kibana_container:5601
  #       -E setup.template.settings.index.number_of_replicas=0
  #       -E apm-server.kibana.enabled=true
  #       -E apm-server.kibana.host=kibana_container:5601
  #       -E apm-server.kibana.protocol=http
  #       -E strict.perms=false
  #       -E apm-server.auth.anonymous.enabled=true
  #   depends_on:
  #     - elasticsearch
  #     - kibana

  # metricbeat:
  #   container_name: metricbeat_container
  #   image: elastic/metricbeat:8.17.3
  #   platform: "linux/arm64/v8"
  #   user: root
  #   ports:
  #     - 5066:5066
  #   networks:
  #     - elastic
  #   volumes:
  #     - ./metricbeat.yml/:/usr/share/metricbeat/metricbeat.yml:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
  #     - /proc:/hostfs/proc:ro
  #     - /:/hostfs:ro
  #   command: ["--strict.perms=false", "--system.hostfs=/hostfs"]
  #   depends_on:
  #     - elasticsearch

  gateway:
    container_name: gateway_container
    build:
      context: ./servers/gateway-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4000:4000
    env_file: ./servers/gateway-service/.env
    environment:
      - ENABLE_APM=0
      - AUTH_BASE_URL=http://auth_container:4002
      - CLIENT_URL=http://localhost:3000
      - CHAT_BASE_URL=http://chat_container:4005
      - COOKIE_SECRET_KEY_FIRST=jZqygPQGEOX1M2jxpQX09g
      - COOKIE_SECRET_KEY_SECOND=QHTOGwLTq0tULf9sxKyKwQ
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - USERS_BASE_URL=http://users_container:4003
      - PRODUCTS_BASE_URL=http://product_container:4004
      - ONLINE_STATUS_BASE_URL=http://online_status_container:4009
      - SOCKET_BASE_URL=http://socket_container:4010
      - CART_BASE_URL=http://cart_container:4011
      - ORDER_BASE_URL=http://order_container:4006
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - rabbitmq

  # built services
  notifications:
    container_name: notification_container
    build:
      context: ./servers/notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4001:4001
    env_file: ./servers/notification-service/.env
    environment:
      - ENABLE_APM=0
      - CLIENT_URL=http://localhost:3000
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - SENDER_EMAIL=95f39b48edfe1b
      - SENDER_PASSWORD=cbbf7b0b94fd7e
    depends_on:
      - elasticsearch
      - rabbitmq
  auth:
    container_name: auth_container
    build:
      context: ./servers/auth-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4002:4002
    env_file: ./servers/auth-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - DATABASE_URL=mysql://admin:Asdfgh123@mysql_auth_container:3306/theshopi_auth
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mysql
      - rabbitmq

  users:
    container_name: users_container
    build:
      context: ./servers/users-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4003:4003
      - 40030:40030
    env_file: ./servers/users-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - DATABASE_URL=mongodb://mongodb_container:27017/theshopi_users
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb
      - rabbitmq

  product:
    container_name: product_container
    build:
      context: ./servers/products-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4004:4004
      - 40040:40040
    env_file: ./servers/products-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - DATABASE_URL=mongodb://mongodb_container:27017/theshopi_products
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - USERS_BASE_URL_GRPC=users_container:40030
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb
      - rabbitmq

  socket:
    container_name: socket_container
    build:
      context: ./servers/socket-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4010:4010
    env_file: ./servers/socket-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - ONLINE_STATUS_BASE_URL=http://online_status_container:4009
      - CHAT_BASE_URL=http://chat_container:4005
      - GATEWAY_URL=http://gateway_container:4000
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch

  chat:
    container_name: chat_container
    build:
      context: ./servers/chat-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4005:4005
    env_file: ./servers/chat-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - DATABASE_URL=mongodb://mongodb_container:27017/theshopi_chat
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - socket
      - mongodb
      - rabbitmq

  online-status:
    container_name: online_status_container
    build:
      context: ./servers/online-status-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4009:4009
    env_file: ./servers/online-status-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - SOCKET_BASE_URL=http://socket_container:4010
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - socket
      - rabbitmq

  cart:
    container_name: cart_container
    build:
      context: ./servers/cart-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4011:4011
      - 40110:40110
    env_file: ./servers/cart-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - REDIS_HOST=redis://redis_container:6379
      - PRODUCT_BASE_URL_GRPC=product_container:40040
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - redis
      - rabbitmq

  order:
    container_name: order_container
    build:
      context: ./servers/orders-service
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 4006:4006
    env_file: ./servers/orders-service/.env
    environment:
      - ENABLE_APM=0
      - API_GATEWAY_URL= http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - DATABASE_URL=mongodb://mongodb_container:27017/theshopi_orders
      - ELASTIC_SEARCH_URL=http://elastic:Asdfgh123@elasticsearch_container:9200
      - GATEWAY_JWT_TOKEN_SECRET=9d9uaKBfV3FEhTNCgvaJZQ
      - NODE_ENV=development
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh123@rabbitmq_container:5672
      - USERS_BASE_URL_GRPC=users_container:40030
      - CART_BASE_URL_GRPC=cart_container:40110
      - PRODUCT_BASE_URL_GRPC=product_container:40040
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb
      - rabbitmq

networks:
  elastic:
    name: elastic
volumes:
  mysql-data-auth:
  redis-data:
  mongodb-data:
  rabbitmq-data:
  elasticsearch-data:
